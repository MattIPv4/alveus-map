@use "sass:color";

$dark: #2D2D2D;
$light: #FFF4EC;
$secondary: #636A60;
$tertiary: #A6B2A0;
$select: #00B4FF;
$select-fill: color.mix($select, #fff, $weight: 10%);
$select-label: color.mix($select, #000, $weight: 60%);
$transition: 0.2s ease-in-out;

* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100vh;
  max-height: 100vh;
  background: $light;
  color: $secondary;
  font-family: 'PT Sans', sans-serif;
}

body {
  display: flex;
  flex-direction: column;

  header {
    background: $secondary;
    color: $light;
  }

  main {
    flex-grow: 1;
    overflow: hidden;

    svg {
      cursor: move;
      width: 100%;
      height: 100%;
      background: $tertiary;

      [id$=" [outline]"] {
        cursor: pointer;

        &,
        > rect,
        > path {
          transition: stroke $transition, fill $transition;
        }

        // Some layers are in a lighten mode to ensure Figma preserved them in the export
        &[style*="mix-blend-mode:lighten"],
        &[style*="mix-blend-mode: lighten"] {
          mix-blend-mode: revert !important;

          &,
          > rect,
          > path {
            fill: transparent;
            stroke: transparent;
          }
        }

        &:hover {
          &,
          > rect {
            &[fill] {
              fill: $select-fill;
            }

            &[stroke] {
              stroke: $select;
            }
          }

          > path {
            &[fill] {
              // Paths that have a mask + fill are actually stroke outlines
              &[mask] {
                fill: $select;
              }

              // Those without a mask are just fills
              &:not([mask]) {
                fill: $select-fill;
              }
            }

            &[stroke] {
              stroke: $select;
            }
          }

          ~ * {
            &[id^="Label"] {
              circle {
                stroke: $select-label;
              }

              path {
                fill: $select-label;
              }
            }

            &:not([id^="Label"]) {
              opacity: 0.1;
            }
          }
        }

        // Ensure everything above the outline does not steal pointer events (e.g. labels)
        ~ * {
          pointer-events: none;

          // Labels will also indicate they're hoverable
          &[id^="Label"] {
            circle {
              transition: stroke $transition;
            }

            path {
              transition: fill $transition;
            }
          }

          // Fade out anything above that isn't the label for the outline
          &:not([id^="Label"]) {
            transition: opacity $transition;
          }
        }
      }
    }
  }

  footer {
    padding: 0 .5rem;
    background: $dark;
    color: $light;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;

    @media only screen and (min-width: 768px) {
      > * {
        flex: 1 1 0;
      }

      > :not(:first-child):not(:last-child) {
        text-align: center;
      }

      > :last-child {
        text-align: right;
      }
    }

    p {
      margin: .5rem;

      a {
        &,
        &:visited {
          color: $tertiary;
          transition: color $transition;
        }

        &:hover,
        &:focus {
          color: $select;
        }
      }
    }
  }
}
